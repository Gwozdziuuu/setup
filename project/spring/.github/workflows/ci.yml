name: CI Pipeline with Ansible

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      build_docker:
        description: 'Build Docker image'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  JAVA_VERSION: '21'
  ANSIBLE_VERSION: '2.15'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install "ansible==${{ env.ANSIBLE_VERSION }}.*"
          ansible --version

      - name: Install Ansible collections
        run: |
          cd ansible
          ansible-galaxy collection install -r requirements.yml

      - name: Run Ansible build playbook
        run: |
          cd ansible
          ansible-playbook playbooks/build.yml \
            -e "skip_tests=${{ github.event.inputs.skip_tests || 'false' }}"

      - name: Run Ansible test playbook
        if: github.event.inputs.skip_tests != 'true'
        run: |
          cd ansible
          ansible-playbook playbooks/test.yml

      - name: Run Ansible quality check playbook
        run: |
          cd ansible
          ansible-playbook playbooks/quality-check.yml \
            -e "run_checkstyle=true" \
            -e "run_spotbugs=false" \
            -e "run_pmd=false"
        continue-on-error: true

      - name: Run Ansible package playbook
        run: |
          cd ansible
          ansible-playbook playbooks/package.yml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-app
          path: target/*.jar
          retention-days: 30

      - name: Set up Docker Buildx
        if: github.event.inputs.build_docker == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Run Ansible docker build playbook
        if: github.event.inputs.build_docker == 'true'
        run: |
          cd ansible
          ansible-playbook playbooks/docker-build.yml \
            -e "image_name=spring-app" \
            -e "image_tag=${{ github.sha }}"
