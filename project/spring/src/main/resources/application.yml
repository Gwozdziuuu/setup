server:
  servlet:
    context-path: /setup

spring:
  application:
    name: setup

  datasource:
    create:
      jdbc-url: jdbc:postgresql://localhost:5432/setup
      username: setup
      password: setup
    command:
      jdbc-url: jdbc:postgresql://localhost:5432/setup
      username: setup
      password: setup
      max-connections: 5
      minimum-idle: 3
    query:
      jdbc-url: jdbc:postgresql://localhost:5432/setup
      username: setup
      password: setup
      max-connections: 30
      minimum-idle: 5

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: true

  rabbitmq:
    host: localhost
    port: 5672
    username: setup
    password: setup
    exchange-name: "setup.direct.exchange"
    order:
      name: "setup.order.queue"
      routing-key: "order"
    notification:
      name: "setup.notification.queue"
      routing-key: "notification"
    audit:
      name: "setup.audit.queue"
      routing-key: "audit"
    listener:
      order-concurrency: "1-10"
      notification-concurrency: "1-5"
      audit-concurrency: "1-3"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
    enable:
      jvm: true
      process: true
      system: true
      logback: true
      http: true
  observations:
    annotations:
      enabled: true
